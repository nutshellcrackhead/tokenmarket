// Code generated by protoc-gen-go.
// source: protos/api.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	protos/api.proto

It has these top-level messages:
	City
	ProfileGetRequest
	ProfilePatchRequest
	ProfileData
	ProfileCitiesRequest
	ProfileCitiesResponse
	AuthLoginRequest
	AuthTokenData
	AuthLogoutRequest
	AuthLogoutResponse
	AuthRegisterRequest
	AuthResetPasswordRequest
	AuthResetPasswordResponse
	AuthProlongSessionResponse
	WalletStatusRequest
	WalletStatusResponse
	WalletStatus
	WalletOperationsListRequest
	WalletOperationsList
	WalletOperation
	ReferralListRequest
	ReferralPartnerList
	ReferralPartner
	CreatePayoutRequest
	CreatePayoutResponse
	CreatePaymentRequest
	CreatePaymentResponse
	UpdatePaymentRequest
	UpdatePaymentResponse
	GetDepositsRequest
	DepositItem
	DepositsList
	CreateDepositRequest
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type City struct {
	Id               *int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	City             *string `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	Country          *string `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
	Region           *string `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *City) Reset()                    { *m = City{} }
func (m *City) String() string            { return proto.CompactTextString(m) }
func (*City) ProtoMessage()               {}
func (*City) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *City) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *City) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *City) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *City) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

type ProfileGetRequest struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileGetRequest) Reset()                    { *m = ProfileGetRequest{} }
func (m *ProfileGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ProfileGetRequest) ProtoMessage()               {}
func (*ProfileGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProfileGetRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ProfilePatchRequest struct {
	Id               *int64  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Avatar           *string `protobuf:"bytes,2,opt,name=avatar" json:"avatar,omitempty"`
	Location         *int64  `protobuf:"varint,3,opt,name=location" json:"location,omitempty"`
	Skype            *string `protobuf:"bytes,4,opt,name=skype" json:"skype,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfilePatchRequest) Reset()                    { *m = ProfilePatchRequest{} }
func (m *ProfilePatchRequest) String() string            { return proto.CompactTextString(m) }
func (*ProfilePatchRequest) ProtoMessage()               {}
func (*ProfilePatchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProfilePatchRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ProfilePatchRequest) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ProfilePatchRequest) GetLocation() int64 {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return 0
}

func (m *ProfilePatchRequest) GetSkype() string {
	if m != nil && m.Skype != nil {
		return *m.Skype
	}
	return ""
}

type ProfileData struct {
	Id               *int64  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Username         *string `protobuf:"bytes,2,req,name=username" json:"username,omitempty"`
	Avatar           *string `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Email            *string `protobuf:"bytes,4,req,name=email" json:"email,omitempty"`
	Location         *City   `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	Skype            *string `protobuf:"bytes,6,opt,name=skype" json:"skype,omitempty"`
	Phone            *string `protobuf:"bytes,7,req,name=phone" json:"phone,omitempty"`
	Muted            *bool   `protobuf:"varint,8,req,name=muted" json:"muted,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfileData) Reset()                    { *m = ProfileData{} }
func (m *ProfileData) String() string            { return proto.CompactTextString(m) }
func (*ProfileData) ProtoMessage()               {}
func (*ProfileData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProfileData) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ProfileData) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *ProfileData) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ProfileData) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *ProfileData) GetLocation() *City {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ProfileData) GetSkype() string {
	if m != nil && m.Skype != nil {
		return *m.Skype
	}
	return ""
}

func (m *ProfileData) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *ProfileData) GetMuted() bool {
	if m != nil && m.Muted != nil {
		return *m.Muted
	}
	return false
}

type ProfileCitiesRequest struct {
	CityFragment     *string `protobuf:"bytes,1,req,name=city_fragment,json=cityFragment" json:"city_fragment,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfileCitiesRequest) Reset()                    { *m = ProfileCitiesRequest{} }
func (m *ProfileCitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*ProfileCitiesRequest) ProtoMessage()               {}
func (*ProfileCitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ProfileCitiesRequest) GetCityFragment() string {
	if m != nil && m.CityFragment != nil {
		return *m.CityFragment
	}
	return ""
}

type ProfileCitiesResponse struct {
	Cities           []*City `protobuf:"bytes,1,rep,name=cities" json:"cities,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfileCitiesResponse) Reset()                    { *m = ProfileCitiesResponse{} }
func (m *ProfileCitiesResponse) String() string            { return proto.CompactTextString(m) }
func (*ProfileCitiesResponse) ProtoMessage()               {}
func (*ProfileCitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ProfileCitiesResponse) GetCities() []*City {
	if m != nil {
		return m.Cities
	}
	return nil
}

type AuthLoginRequest struct {
	Username         *string `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthLoginRequest) Reset()                    { *m = AuthLoginRequest{} }
func (m *AuthLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthLoginRequest) ProtoMessage()               {}
func (*AuthLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AuthLoginRequest) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *AuthLoginRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type AuthTokenData struct {
	Token            *string `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthTokenData) Reset()                    { *m = AuthTokenData{} }
func (m *AuthTokenData) String() string            { return proto.CompactTextString(m) }
func (*AuthTokenData) ProtoMessage()               {}
func (*AuthTokenData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AuthTokenData) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type AuthLogoutRequest struct {
	Id               *int64  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Token            *string `protobuf:"bytes,2,req,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthLogoutRequest) Reset()                    { *m = AuthLogoutRequest{} }
func (m *AuthLogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthLogoutRequest) ProtoMessage()               {}
func (*AuthLogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AuthLogoutRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AuthLogoutRequest) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type AuthLogoutResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthLogoutResponse) Reset()                    { *m = AuthLogoutResponse{} }
func (m *AuthLogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthLogoutResponse) ProtoMessage()               {}
func (*AuthLogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type AuthRegisterRequest struct {
	Username         *string `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	Email            *string `protobuf:"bytes,3,req,name=email" json:"email,omitempty"`
	Phone            *string `protobuf:"bytes,4,req,name=phone" json:"phone,omitempty"`
	Referrer         *string `protobuf:"bytes,5,opt,name=referrer" json:"referrer,omitempty"`
	Leg              *string `protobuf:"bytes,6,opt,name=leg" json:"leg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthRegisterRequest) Reset()                    { *m = AuthRegisterRequest{} }
func (m *AuthRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthRegisterRequest) ProtoMessage()               {}
func (*AuthRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AuthRegisterRequest) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *AuthRegisterRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *AuthRegisterRequest) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *AuthRegisterRequest) GetPhone() string {
	if m != nil && m.Phone != nil {
		return *m.Phone
	}
	return ""
}

func (m *AuthRegisterRequest) GetReferrer() string {
	if m != nil && m.Referrer != nil {
		return *m.Referrer
	}
	return ""
}

func (m *AuthRegisterRequest) GetLeg() string {
	if m != nil && m.Leg != nil {
		return *m.Leg
	}
	return ""
}

type AuthResetPasswordRequest struct {
	Email            *string `protobuf:"bytes,1,req,name=email" json:"email,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthResetPasswordRequest) Reset()                    { *m = AuthResetPasswordRequest{} }
func (m *AuthResetPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthResetPasswordRequest) ProtoMessage()               {}
func (*AuthResetPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AuthResetPasswordRequest) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type AuthResetPasswordResponse struct {
	Status           *string `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthResetPasswordResponse) Reset()                    { *m = AuthResetPasswordResponse{} }
func (m *AuthResetPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthResetPasswordResponse) ProtoMessage()               {}
func (*AuthResetPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AuthResetPasswordResponse) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

type AuthProlongSessionResponse struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthProlongSessionResponse) Reset()                    { *m = AuthProlongSessionResponse{} }
func (m *AuthProlongSessionResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthProlongSessionResponse) ProtoMessage()               {}
func (*AuthProlongSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AuthProlongSessionResponse) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type WalletStatusRequest struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WalletStatusRequest) Reset()                    { *m = WalletStatusRequest{} }
func (m *WalletStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*WalletStatusRequest) ProtoMessage()               {}
func (*WalletStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *WalletStatusRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type WalletStatusResponse struct {
	State            []*WalletStatus `protobuf:"bytes,1,rep,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *WalletStatusResponse) Reset()                    { *m = WalletStatusResponse{} }
func (m *WalletStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*WalletStatusResponse) ProtoMessage()               {}
func (*WalletStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *WalletStatusResponse) GetState() []*WalletStatus {
	if m != nil {
		return m.State
	}
	return nil
}

type WalletStatus struct {
	Currency         *string  `protobuf:"bytes,1,req,name=currency" json:"currency,omitempty"`
	Amount           *float32 `protobuf:"fixed32,2,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *WalletStatus) Reset()                    { *m = WalletStatus{} }
func (m *WalletStatus) String() string            { return proto.CompactTextString(m) }
func (*WalletStatus) ProtoMessage()               {}
func (*WalletStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *WalletStatus) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *WalletStatus) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type WalletOperationsListRequest struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Page             *int64 `protobuf:"varint,2,req,name=page" json:"page,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WalletOperationsListRequest) Reset()                    { *m = WalletOperationsListRequest{} }
func (m *WalletOperationsListRequest) String() string            { return proto.CompactTextString(m) }
func (*WalletOperationsListRequest) ProtoMessage()               {}
func (*WalletOperationsListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *WalletOperationsListRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *WalletOperationsListRequest) GetPage() int64 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

type WalletOperationsList struct {
	Data             []*WalletOperation `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *WalletOperationsList) Reset()                    { *m = WalletOperationsList{} }
func (m *WalletOperationsList) String() string            { return proto.CompactTextString(m) }
func (*WalletOperationsList) ProtoMessage()               {}
func (*WalletOperationsList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *WalletOperationsList) GetData() []*WalletOperation {
	if m != nil {
		return m.Data
	}
	return nil
}

type WalletOperation struct {
	Id               *int64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Date             *int64   `protobuf:"varint,2,req,name=date" json:"date,omitempty"`
	Type             *string  `protobuf:"bytes,3,req,name=type" json:"type,omitempty"`
	Status           *string  `protobuf:"bytes,4,req,name=status" json:"status,omitempty"`
	Amount           *float32 `protobuf:"fixed32,5,opt,name=amount" json:"amount,omitempty"`
	Action           *string  `protobuf:"bytes,6,opt,name=action" json:"action,omitempty"`
	Currency         *string  `protobuf:"bytes,7,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *WalletOperation) Reset()                    { *m = WalletOperation{} }
func (m *WalletOperation) String() string            { return proto.CompactTextString(m) }
func (*WalletOperation) ProtoMessage()               {}
func (*WalletOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *WalletOperation) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *WalletOperation) GetDate() int64 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

func (m *WalletOperation) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *WalletOperation) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *WalletOperation) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *WalletOperation) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *WalletOperation) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

type ReferralListRequest struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Page             *int64 `protobuf:"varint,2,req,name=page" json:"page,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReferralListRequest) Reset()                    { *m = ReferralListRequest{} }
func (m *ReferralListRequest) String() string            { return proto.CompactTextString(m) }
func (*ReferralListRequest) ProtoMessage()               {}
func (*ReferralListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReferralListRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ReferralListRequest) GetPage() int64 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

type ReferralPartnerList struct {
	Data             []*ReferralPartner `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ReferralPartnerList) Reset()                    { *m = ReferralPartnerList{} }
func (m *ReferralPartnerList) String() string            { return proto.CompactTextString(m) }
func (*ReferralPartnerList) ProtoMessage()               {}
func (*ReferralPartnerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ReferralPartnerList) GetData() []*ReferralPartner {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReferralPartner struct {
	Avatar           *string  `protobuf:"bytes,1,opt,name=avatar" json:"avatar,omitempty"`
	Username         *string  `protobuf:"bytes,2,req,name=username" json:"username,omitempty"`
	Level            *int64   `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Leg              *string  `protobuf:"bytes,4,req,name=leg" json:"leg,omitempty"`
	Registered       *int64   `protobuf:"varint,5,req,name=registered" json:"registered,omitempty"`
	Revenue          *float32 `protobuf:"fixed32,6,req,name=revenue" json:"revenue,omitempty"`
	Referrer         *string  `protobuf:"bytes,7,req,name=referrer" json:"referrer,omitempty"`
	Parent           *string  `protobuf:"bytes,8,req,name=parent" json:"parent,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ReferralPartner) Reset()                    { *m = ReferralPartner{} }
func (m *ReferralPartner) String() string            { return proto.CompactTextString(m) }
func (*ReferralPartner) ProtoMessage()               {}
func (*ReferralPartner) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ReferralPartner) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ReferralPartner) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *ReferralPartner) GetLevel() int64 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ReferralPartner) GetLeg() string {
	if m != nil && m.Leg != nil {
		return *m.Leg
	}
	return ""
}

func (m *ReferralPartner) GetRegistered() int64 {
	if m != nil && m.Registered != nil {
		return *m.Registered
	}
	return 0
}

func (m *ReferralPartner) GetRevenue() float32 {
	if m != nil && m.Revenue != nil {
		return *m.Revenue
	}
	return 0
}

func (m *ReferralPartner) GetReferrer() string {
	if m != nil && m.Referrer != nil {
		return *m.Referrer
	}
	return ""
}

func (m *ReferralPartner) GetParent() string {
	if m != nil && m.Parent != nil {
		return *m.Parent
	}
	return ""
}

type CreatePayoutRequest struct {
	Id               *int64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Method           *string  `protobuf:"bytes,2,req,name=method" json:"method,omitempty"`
	Amount           *float32 `protobuf:"fixed32,3,req,name=amount" json:"amount,omitempty"`
	Currency         *string  `protobuf:"bytes,4,req,name=currency" json:"currency,omitempty"`
	Account          *string  `protobuf:"bytes,5,req,name=account" json:"account,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CreatePayoutRequest) Reset()                    { *m = CreatePayoutRequest{} }
func (m *CreatePayoutRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePayoutRequest) ProtoMessage()               {}
func (*CreatePayoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CreatePayoutRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CreatePayoutRequest) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *CreatePayoutRequest) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CreatePayoutRequest) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *CreatePayoutRequest) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

type CreatePayoutResponse struct {
	Status           *string `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreatePayoutResponse) Reset()                    { *m = CreatePayoutResponse{} }
func (m *CreatePayoutResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePayoutResponse) ProtoMessage()               {}
func (*CreatePayoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreatePayoutResponse) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

type CreatePaymentRequest struct {
	Id               *int64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Method           *string  `protobuf:"bytes,2,req,name=method" json:"method,omitempty"`
	Amount           *float32 `protobuf:"fixed32,3,req,name=amount" json:"amount,omitempty"`
	Currency         *string  `protobuf:"bytes,4,req,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CreatePaymentRequest) Reset()                    { *m = CreatePaymentRequest{} }
func (m *CreatePaymentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePaymentRequest) ProtoMessage()               {}
func (*CreatePaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreatePaymentRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CreatePaymentRequest) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *CreatePaymentRequest) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CreatePaymentRequest) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

type CreatePaymentResponse struct {
	Id               *int64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Token            *string  `protobuf:"bytes,2,req,name=token" json:"token,omitempty"`
	MerchantAccount  *string  `protobuf:"bytes,3,req,name=merchant_account,json=merchantAccount" json:"merchant_account,omitempty"`
	Amount           *float32 `protobuf:"fixed32,4,req,name=amount" json:"amount,omitempty"`
	Currency         *string  `protobuf:"bytes,5,req,name=currency" json:"currency,omitempty"`
	Method           *string  `protobuf:"bytes,6,req,name=method" json:"method,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CreatePaymentResponse) Reset()                    { *m = CreatePaymentResponse{} }
func (m *CreatePaymentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePaymentResponse) ProtoMessage()               {}
func (*CreatePaymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CreatePaymentResponse) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CreatePaymentResponse) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CreatePaymentResponse) GetMerchantAccount() string {
	if m != nil && m.MerchantAccount != nil {
		return *m.MerchantAccount
	}
	return ""
}

func (m *CreatePaymentResponse) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CreatePaymentResponse) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *CreatePaymentResponse) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

type UpdatePaymentRequest struct {
	OperationId      *int64   `protobuf:"varint,1,req,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	Token            *string  `protobuf:"bytes,2,req,name=token" json:"token,omitempty"`
	Amount           *float32 `protobuf:"fixed32,3,req,name=amount" json:"amount,omitempty"`
	Currency         *string  `protobuf:"bytes,4,req,name=currency" json:"currency,omitempty"`
	Method           *string  `protobuf:"bytes,5,req,name=method" json:"method,omitempty"`
	Status           *string  `protobuf:"bytes,6,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UpdatePaymentRequest) Reset()                    { *m = UpdatePaymentRequest{} }
func (m *UpdatePaymentRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePaymentRequest) ProtoMessage()               {}
func (*UpdatePaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *UpdatePaymentRequest) GetOperationId() int64 {
	if m != nil && m.OperationId != nil {
		return *m.OperationId
	}
	return 0
}

func (m *UpdatePaymentRequest) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *UpdatePaymentRequest) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *UpdatePaymentRequest) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *UpdatePaymentRequest) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *UpdatePaymentRequest) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

type UpdatePaymentResponse struct {
	Status           *string `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UpdatePaymentResponse) Reset()                    { *m = UpdatePaymentResponse{} }
func (m *UpdatePaymentResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePaymentResponse) ProtoMessage()               {}
func (*UpdatePaymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdatePaymentResponse) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

type GetDepositsRequest struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Page             *int64 `protobuf:"varint,2,req,name=page" json:"page,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetDepositsRequest) Reset()                    { *m = GetDepositsRequest{} }
func (m *GetDepositsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDepositsRequest) ProtoMessage()               {}
func (*GetDepositsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *GetDepositsRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GetDepositsRequest) GetPage() int64 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

type DepositItem struct {
	Date             *int64   `protobuf:"varint,1,req,name=date" json:"date,omitempty"`
	Valid            *int64   `protobuf:"varint,2,req,name=valid" json:"valid,omitempty"`
	Currency         *string  `protobuf:"bytes,3,req,name=currency" json:"currency,omitempty"`
	Amount           *float32 `protobuf:"fixed32,4,req,name=amount" json:"amount,omitempty"`
	Status           *string  `protobuf:"bytes,5,req,name=status" json:"status,omitempty"`
	Paidout          *float32 `protobuf:"fixed32,6,req,name=paidout" json:"paidout,omitempty"`
	Paydate          *int64   `protobuf:"varint,7,req,name=paydate" json:"paydate,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DepositItem) Reset()                    { *m = DepositItem{} }
func (m *DepositItem) String() string            { return proto.CompactTextString(m) }
func (*DepositItem) ProtoMessage()               {}
func (*DepositItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *DepositItem) GetDate() int64 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

func (m *DepositItem) GetValid() int64 {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return 0
}

func (m *DepositItem) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *DepositItem) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *DepositItem) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *DepositItem) GetPaidout() float32 {
	if m != nil && m.Paidout != nil {
		return *m.Paidout
	}
	return 0
}

func (m *DepositItem) GetPaydate() int64 {
	if m != nil && m.Paydate != nil {
		return *m.Paydate
	}
	return 0
}

type DepositsList struct {
	Data             []*DepositItem `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *DepositsList) Reset()                    { *m = DepositsList{} }
func (m *DepositsList) String() string            { return proto.CompactTextString(m) }
func (*DepositsList) ProtoMessage()               {}
func (*DepositsList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *DepositsList) GetData() []*DepositItem {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateDepositRequest struct {
	Id               *int64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Amount           *float32 `protobuf:"fixed32,2,req,name=amount" json:"amount,omitempty"`
	Currency         *string  `protobuf:"bytes,3,req,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CreateDepositRequest) Reset()                    { *m = CreateDepositRequest{} }
func (m *CreateDepositRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDepositRequest) ProtoMessage()               {}
func (*CreateDepositRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *CreateDepositRequest) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CreateDepositRequest) GetAmount() float32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CreateDepositRequest) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func init() {
	proto.RegisterType((*City)(nil), "City")
	proto.RegisterType((*ProfileGetRequest)(nil), "ProfileGetRequest")
	proto.RegisterType((*ProfilePatchRequest)(nil), "ProfilePatchRequest")
	proto.RegisterType((*ProfileData)(nil), "ProfileData")
	proto.RegisterType((*ProfileCitiesRequest)(nil), "ProfileCitiesRequest")
	proto.RegisterType((*ProfileCitiesResponse)(nil), "ProfileCitiesResponse")
	proto.RegisterType((*AuthLoginRequest)(nil), "AuthLoginRequest")
	proto.RegisterType((*AuthTokenData)(nil), "AuthTokenData")
	proto.RegisterType((*AuthLogoutRequest)(nil), "AuthLogoutRequest")
	proto.RegisterType((*AuthLogoutResponse)(nil), "AuthLogoutResponse")
	proto.RegisterType((*AuthRegisterRequest)(nil), "AuthRegisterRequest")
	proto.RegisterType((*AuthResetPasswordRequest)(nil), "AuthResetPasswordRequest")
	proto.RegisterType((*AuthResetPasswordResponse)(nil), "AuthResetPasswordResponse")
	proto.RegisterType((*AuthProlongSessionResponse)(nil), "AuthProlongSessionResponse")
	proto.RegisterType((*WalletStatusRequest)(nil), "WalletStatusRequest")
	proto.RegisterType((*WalletStatusResponse)(nil), "WalletStatusResponse")
	proto.RegisterType((*WalletStatus)(nil), "WalletStatus")
	proto.RegisterType((*WalletOperationsListRequest)(nil), "WalletOperationsListRequest")
	proto.RegisterType((*WalletOperationsList)(nil), "WalletOperationsList")
	proto.RegisterType((*WalletOperation)(nil), "WalletOperation")
	proto.RegisterType((*ReferralListRequest)(nil), "ReferralListRequest")
	proto.RegisterType((*ReferralPartnerList)(nil), "ReferralPartnerList")
	proto.RegisterType((*ReferralPartner)(nil), "ReferralPartner")
	proto.RegisterType((*CreatePayoutRequest)(nil), "CreatePayoutRequest")
	proto.RegisterType((*CreatePayoutResponse)(nil), "CreatePayoutResponse")
	proto.RegisterType((*CreatePaymentRequest)(nil), "CreatePaymentRequest")
	proto.RegisterType((*CreatePaymentResponse)(nil), "CreatePaymentResponse")
	proto.RegisterType((*UpdatePaymentRequest)(nil), "UpdatePaymentRequest")
	proto.RegisterType((*UpdatePaymentResponse)(nil), "UpdatePaymentResponse")
	proto.RegisterType((*GetDepositsRequest)(nil), "GetDepositsRequest")
	proto.RegisterType((*DepositItem)(nil), "DepositItem")
	proto.RegisterType((*DepositsList)(nil), "DepositsList")
	proto.RegisterType((*CreateDepositRequest)(nil), "CreateDepositRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Profile service

type ProfileClient interface {
	Get(ctx context.Context, in *ProfileGetRequest, opts ...client.CallOption) (*ProfileData, error)
	Patch(ctx context.Context, in *ProfilePatchRequest, opts ...client.CallOption) (*ProfileData, error)
	Cities(ctx context.Context, in *ProfileCitiesRequest, opts ...client.CallOption) (*ProfileCitiesResponse, error)
}

type profileClient struct {
	c           client.Client
	serviceName string
}

func NewProfileClient(serviceName string, c client.Client) ProfileClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "profile"
	}
	return &profileClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *profileClient) Get(ctx context.Context, in *ProfileGetRequest, opts ...client.CallOption) (*ProfileData, error) {
	req := c.c.NewRequest(c.serviceName, "Profile.Get", in)
	out := new(ProfileData)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) Patch(ctx context.Context, in *ProfilePatchRequest, opts ...client.CallOption) (*ProfileData, error) {
	req := c.c.NewRequest(c.serviceName, "Profile.Patch", in)
	out := new(ProfileData)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) Cities(ctx context.Context, in *ProfileCitiesRequest, opts ...client.CallOption) (*ProfileCitiesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Profile.Cities", in)
	out := new(ProfileCitiesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Profile service

type ProfileHandler interface {
	Get(context.Context, *ProfileGetRequest, *ProfileData) error
	Patch(context.Context, *ProfilePatchRequest, *ProfileData) error
	Cities(context.Context, *ProfileCitiesRequest, *ProfileCitiesResponse) error
}

func RegisterProfileHandler(s server.Server, hdlr ProfileHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Profile{hdlr}, opts...))
}

type Profile struct {
	ProfileHandler
}

func (h *Profile) Get(ctx context.Context, in *ProfileGetRequest, out *ProfileData) error {
	return h.ProfileHandler.Get(ctx, in, out)
}

func (h *Profile) Patch(ctx context.Context, in *ProfilePatchRequest, out *ProfileData) error {
	return h.ProfileHandler.Patch(ctx, in, out)
}

func (h *Profile) Cities(ctx context.Context, in *ProfileCitiesRequest, out *ProfileCitiesResponse) error {
	return h.ProfileHandler.Cities(ctx, in, out)
}

// Client API for Auth service

type AuthClient interface {
	Login(ctx context.Context, in *AuthLoginRequest, opts ...client.CallOption) (*AuthTokenData, error)
	Logout(ctx context.Context, in *AuthLogoutRequest, opts ...client.CallOption) (*AuthLogoutResponse, error)
	Register(ctx context.Context, in *AuthRegisterRequest, opts ...client.CallOption) (*AuthTokenData, error)
	ProlongSession(ctx context.Context, in *AuthTokenData, opts ...client.CallOption) (*AuthProlongSessionResponse, error)
	ResetPassword(ctx context.Context, in *AuthResetPasswordRequest, opts ...client.CallOption) (*AuthResetPasswordResponse, error)
}

type authClient struct {
	c           client.Client
	serviceName string
}

func NewAuthClient(serviceName string, c client.Client) AuthClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "auth"
	}
	return &authClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *authClient) Login(ctx context.Context, in *AuthLoginRequest, opts ...client.CallOption) (*AuthTokenData, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Login", in)
	out := new(AuthTokenData)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Logout(ctx context.Context, in *AuthLogoutRequest, opts ...client.CallOption) (*AuthLogoutResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Logout", in)
	out := new(AuthLogoutResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Register(ctx context.Context, in *AuthRegisterRequest, opts ...client.CallOption) (*AuthTokenData, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.Register", in)
	out := new(AuthTokenData)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ProlongSession(ctx context.Context, in *AuthTokenData, opts ...client.CallOption) (*AuthProlongSessionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.ProlongSession", in)
	out := new(AuthProlongSessionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ResetPassword(ctx context.Context, in *AuthResetPasswordRequest, opts ...client.CallOption) (*AuthResetPasswordResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Auth.ResetPassword", in)
	out := new(AuthResetPasswordResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthHandler interface {
	Login(context.Context, *AuthLoginRequest, *AuthTokenData) error
	Logout(context.Context, *AuthLogoutRequest, *AuthLogoutResponse) error
	Register(context.Context, *AuthRegisterRequest, *AuthTokenData) error
	ProlongSession(context.Context, *AuthTokenData, *AuthProlongSessionResponse) error
	ResetPassword(context.Context, *AuthResetPasswordRequest, *AuthResetPasswordResponse) error
}

func RegisterAuthHandler(s server.Server, hdlr AuthHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Auth{hdlr}, opts...))
}

type Auth struct {
	AuthHandler
}

func (h *Auth) Login(ctx context.Context, in *AuthLoginRequest, out *AuthTokenData) error {
	return h.AuthHandler.Login(ctx, in, out)
}

func (h *Auth) Logout(ctx context.Context, in *AuthLogoutRequest, out *AuthLogoutResponse) error {
	return h.AuthHandler.Logout(ctx, in, out)
}

func (h *Auth) Register(ctx context.Context, in *AuthRegisterRequest, out *AuthTokenData) error {
	return h.AuthHandler.Register(ctx, in, out)
}

func (h *Auth) ProlongSession(ctx context.Context, in *AuthTokenData, out *AuthProlongSessionResponse) error {
	return h.AuthHandler.ProlongSession(ctx, in, out)
}

func (h *Auth) ResetPassword(ctx context.Context, in *AuthResetPasswordRequest, out *AuthResetPasswordResponse) error {
	return h.AuthHandler.ResetPassword(ctx, in, out)
}

// Client API for Wallet service

type WalletClient interface {
	Status(ctx context.Context, in *WalletStatusRequest, opts ...client.CallOption) (*WalletStatusResponse, error)
	OperationsList(ctx context.Context, in *WalletOperationsListRequest, opts ...client.CallOption) (*WalletOperationsList, error)
}

type walletClient struct {
	c           client.Client
	serviceName string
}

func NewWalletClient(serviceName string, c client.Client) WalletClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "wallet"
	}
	return &walletClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *walletClient) Status(ctx context.Context, in *WalletStatusRequest, opts ...client.CallOption) (*WalletStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Wallet.Status", in)
	out := new(WalletStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) OperationsList(ctx context.Context, in *WalletOperationsListRequest, opts ...client.CallOption) (*WalletOperationsList, error) {
	req := c.c.NewRequest(c.serviceName, "Wallet.OperationsList", in)
	out := new(WalletOperationsList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Wallet service

type WalletHandler interface {
	Status(context.Context, *WalletStatusRequest, *WalletStatusResponse) error
	OperationsList(context.Context, *WalletOperationsListRequest, *WalletOperationsList) error
}

func RegisterWalletHandler(s server.Server, hdlr WalletHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Wallet{hdlr}, opts...))
}

type Wallet struct {
	WalletHandler
}

func (h *Wallet) Status(ctx context.Context, in *WalletStatusRequest, out *WalletStatusResponse) error {
	return h.WalletHandler.Status(ctx, in, out)
}

func (h *Wallet) OperationsList(ctx context.Context, in *WalletOperationsListRequest, out *WalletOperationsList) error {
	return h.WalletHandler.OperationsList(ctx, in, out)
}

// Client API for Referral service

type ReferralClient interface {
	List(ctx context.Context, in *ReferralListRequest, opts ...client.CallOption) (*ReferralPartnerList, error)
}

type referralClient struct {
	c           client.Client
	serviceName string
}

func NewReferralClient(serviceName string, c client.Client) ReferralClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "referral"
	}
	return &referralClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *referralClient) List(ctx context.Context, in *ReferralListRequest, opts ...client.CallOption) (*ReferralPartnerList, error) {
	req := c.c.NewRequest(c.serviceName, "Referral.List", in)
	out := new(ReferralPartnerList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Referral service

type ReferralHandler interface {
	List(context.Context, *ReferralListRequest, *ReferralPartnerList) error
}

func RegisterReferralHandler(s server.Server, hdlr ReferralHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Referral{hdlr}, opts...))
}

type Referral struct {
	ReferralHandler
}

func (h *Referral) List(ctx context.Context, in *ReferralListRequest, out *ReferralPartnerList) error {
	return h.ReferralHandler.List(ctx, in, out)
}

// Client API for Operations service

type OperationsClient interface {
	CreatePayment(ctx context.Context, in *CreatePaymentRequest, opts ...client.CallOption) (*CreatePaymentResponse, error)
	ActivateUser(ctx context.Context, in *CreatePaymentRequest, opts ...client.CallOption) (*CreatePaymentResponse, error)
	UpdatePaymentStatus(ctx context.Context, in *UpdatePaymentRequest, opts ...client.CallOption) (*UpdatePaymentResponse, error)
	CreatePayout(ctx context.Context, in *CreatePayoutRequest, opts ...client.CallOption) (*CreatePayoutResponse, error)
}

type operationsClient struct {
	c           client.Client
	serviceName string
}

func NewOperationsClient(serviceName string, c client.Client) OperationsClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "operations"
	}
	return &operationsClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *operationsClient) CreatePayment(ctx context.Context, in *CreatePaymentRequest, opts ...client.CallOption) (*CreatePaymentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Operations.CreatePayment", in)
	out := new(CreatePaymentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationsClient) ActivateUser(ctx context.Context, in *CreatePaymentRequest, opts ...client.CallOption) (*CreatePaymentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Operations.ActivateUser", in)
	out := new(CreatePaymentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationsClient) UpdatePaymentStatus(ctx context.Context, in *UpdatePaymentRequest, opts ...client.CallOption) (*UpdatePaymentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Operations.UpdatePaymentStatus", in)
	out := new(UpdatePaymentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationsClient) CreatePayout(ctx context.Context, in *CreatePayoutRequest, opts ...client.CallOption) (*CreatePayoutResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Operations.CreatePayout", in)
	out := new(CreatePayoutResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Operations service

type OperationsHandler interface {
	CreatePayment(context.Context, *CreatePaymentRequest, *CreatePaymentResponse) error
	ActivateUser(context.Context, *CreatePaymentRequest, *CreatePaymentResponse) error
	UpdatePaymentStatus(context.Context, *UpdatePaymentRequest, *UpdatePaymentResponse) error
	CreatePayout(context.Context, *CreatePayoutRequest, *CreatePayoutResponse) error
}

func RegisterOperationsHandler(s server.Server, hdlr OperationsHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Operations{hdlr}, opts...))
}

type Operations struct {
	OperationsHandler
}

func (h *Operations) CreatePayment(ctx context.Context, in *CreatePaymentRequest, out *CreatePaymentResponse) error {
	return h.OperationsHandler.CreatePayment(ctx, in, out)
}

func (h *Operations) ActivateUser(ctx context.Context, in *CreatePaymentRequest, out *CreatePaymentResponse) error {
	return h.OperationsHandler.ActivateUser(ctx, in, out)
}

func (h *Operations) UpdatePaymentStatus(ctx context.Context, in *UpdatePaymentRequest, out *UpdatePaymentResponse) error {
	return h.OperationsHandler.UpdatePaymentStatus(ctx, in, out)
}

func (h *Operations) CreatePayout(ctx context.Context, in *CreatePayoutRequest, out *CreatePayoutResponse) error {
	return h.OperationsHandler.CreatePayout(ctx, in, out)
}

// Client API for Deposits service

type DepositsClient interface {
	GetDeposits(ctx context.Context, in *GetDepositsRequest, opts ...client.CallOption) (*DepositsList, error)
	CreateDeposit(ctx context.Context, in *CreateDepositRequest, opts ...client.CallOption) (*DepositItem, error)
}

type depositsClient struct {
	c           client.Client
	serviceName string
}

func NewDepositsClient(serviceName string, c client.Client) DepositsClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "deposits"
	}
	return &depositsClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *depositsClient) GetDeposits(ctx context.Context, in *GetDepositsRequest, opts ...client.CallOption) (*DepositsList, error) {
	req := c.c.NewRequest(c.serviceName, "Deposits.GetDeposits", in)
	out := new(DepositsList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *depositsClient) CreateDeposit(ctx context.Context, in *CreateDepositRequest, opts ...client.CallOption) (*DepositItem, error) {
	req := c.c.NewRequest(c.serviceName, "Deposits.CreateDeposit", in)
	out := new(DepositItem)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Deposits service

type DepositsHandler interface {
	GetDeposits(context.Context, *GetDepositsRequest, *DepositsList) error
	CreateDeposit(context.Context, *CreateDepositRequest, *DepositItem) error
}

func RegisterDepositsHandler(s server.Server, hdlr DepositsHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Deposits{hdlr}, opts...))
}

type Deposits struct {
	DepositsHandler
}

func (h *Deposits) GetDeposits(ctx context.Context, in *GetDepositsRequest, out *DepositsList) error {
	return h.DepositsHandler.GetDeposits(ctx, in, out)
}

func (h *Deposits) CreateDeposit(ctx context.Context, in *CreateDepositRequest, out *DepositItem) error {
	return h.DepositsHandler.CreateDeposit(ctx, in, out)
}

func init() { proto.RegisterFile("protos/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x8e, 0x93, 0x38, 0xc9, 0x9e, 0xcd, 0x6e, 0xb7, 0x13, 0x27, 0x72, 0x5d, 0x40, 0xe9, 0x94,
	0x4a, 0x5b, 0xa9, 0x4c, 0xab, 0x14, 0x15, 0xaa, 0x82, 0xe8, 0xb6, 0x55, 0x97, 0xa2, 0x4a, 0xac,
	0x52, 0x2a, 0xa4, 0x0a, 0xa9, 0x1a, 0x25, 0xd3, 0xac, 0xd5, 0xc4, 0x36, 0xe3, 0xc9, 0x56, 0x79,
	0x05, 0xb8, 0xe7, 0x92, 0x5b, 0xb8, 0xe1, 0x0a, 0x24, 0x5e, 0x82, 0x37, 0xe0, 0x65, 0xd0, 0xfc,
	0xd8, 0x19, 0x3b, 0xce, 0x56, 0x05, 0x89, 0xbb, 0x39, 0x67, 0x7e, 0xce, 0xff, 0x37, 0x1f, 0x1c,
	0x24, 0x3c, 0x16, 0x71, 0x7a, 0x93, 0x26, 0x21, 0x51, 0x4b, 0xfc, 0x1d, 0x34, 0x1f, 0x86, 0x62,
	0x85, 0xf6, 0xa1, 0x1e, 0x4e, 0x7d, 0x67, 0xe8, 0x1c, 0x36, 0xc6, 0xf5, 0x70, 0x8a, 0x10, 0x34,
	0x27, 0xa1, 0x58, 0xf9, 0xf5, 0xa1, 0x73, 0xb8, 0x33, 0x56, 0x6b, 0xe4, 0x43, 0x7b, 0x12, 0x2f,
	0x23, 0xc1, 0x57, 0x7e, 0x43, 0xa9, 0x33, 0x11, 0x0d, 0xa0, 0xc5, 0xd9, 0x2c, 0x8c, 0x23, 0xbf,
	0xa9, 0x36, 0x8c, 0x84, 0xaf, 0xc2, 0xc5, 0x13, 0x1e, 0xbf, 0x0a, 0xe7, 0xec, 0x98, 0x89, 0x31,
	0xfb, 0x7e, 0xc9, 0x52, 0x91, 0x9b, 0xaa, 0x6b, 0x53, 0x38, 0x86, 0x9e, 0x39, 0x74, 0x42, 0xc5,
	0xe4, 0x74, 0xcb, 0x31, 0x69, 0x83, 0x9e, 0x51, 0x41, 0xb9, 0xf1, 0xc9, 0x48, 0x28, 0x80, 0xce,
	0x3c, 0x9e, 0x50, 0x21, 0xad, 0x37, 0x94, 0xff, 0xb9, 0x8c, 0x3c, 0x70, 0xd3, 0xd7, 0xab, 0x84,
	0x19, 0xb7, 0xb4, 0x80, 0xff, 0x72, 0x60, 0xd7, 0x58, 0x7c, 0x44, 0x05, 0xdd, 0xb0, 0x14, 0x40,
	0x67, 0x99, 0x32, 0x1e, 0xd1, 0x05, 0xf3, 0xeb, 0xc3, 0xfa, 0xe1, 0xce, 0x38, 0x97, 0x2d, 0x2f,
	0x1a, 0x05, 0x2f, 0x3c, 0x70, 0xd9, 0x82, 0x86, 0x73, 0xbf, 0xa9, 0x2e, 0x68, 0x01, 0x5d, 0xb1,
	0x7c, 0x73, 0x87, 0xce, 0xe1, 0xee, 0xc8, 0x25, 0x32, 0xdd, 0x55, 0x2e, 0xb6, 0x2c, 0x17, 0xa5,
	0x36, 0x39, 0x8d, 0x23, 0xe6, 0xb7, 0xf5, 0x73, 0x4a, 0x90, 0xda, 0xc5, 0x52, 0xb0, 0xa9, 0xdf,
	0x19, 0xd6, 0x0f, 0x3b, 0x63, 0x2d, 0xe0, 0x7b, 0xe0, 0x99, 0x68, 0x1e, 0x86, 0x22, 0x64, 0x69,
	0x96, 0xc0, 0xab, 0xb0, 0x27, 0xcb, 0xf6, 0xf2, 0x15, 0xa7, 0xb3, 0x05, 0x8b, 0x84, 0x8a, 0x70,
	0x67, 0xdc, 0x95, 0xca, 0xc7, 0x46, 0x87, 0xef, 0x40, 0xbf, 0x74, 0x39, 0x4d, 0xe2, 0x28, 0x65,
	0xe8, 0x7d, 0x68, 0x4d, 0x94, 0xc6, 0x77, 0x86, 0x8d, 0xb5, 0xe3, 0x46, 0x89, 0xbf, 0x82, 0x83,
	0xa3, 0xa5, 0x38, 0x7d, 0x1a, 0xcf, 0xc2, 0x28, 0x33, 0x68, 0xe7, 0xcd, 0x29, 0xe5, 0x2d, 0x80,
	0x4e, 0x42, 0xd3, 0xf4, 0x4d, 0xcc, 0xa7, 0x59, 0x4e, 0x33, 0x19, 0x5f, 0x83, 0x3d, 0xf9, 0xd6,
	0x37, 0xf1, 0x6b, 0x16, 0xa9, 0x82, 0x78, 0xe0, 0x0a, 0x29, 0x98, 0x57, 0xb4, 0x80, 0xef, 0xc2,
	0x45, 0x63, 0x32, 0x5e, 0x6e, 0x6b, 0xa6, 0xf5, 0xd5, 0xba, 0x7d, 0xd5, 0x03, 0x64, 0x5f, 0xd5,
	0x21, 0xe2, 0x5f, 0x1c, 0xe8, 0x49, 0xf5, 0x98, 0xcd, 0xc2, 0x54, 0x30, 0xfe, 0x1f, 0xe3, 0x58,
	0xf7, 0x40, 0xc3, 0xee, 0x81, 0xbc, 0x94, 0x4d, 0xbb, 0x94, 0x01, 0x74, 0x38, 0x7b, 0xc5, 0x38,
	0x67, 0x5c, 0x75, 0xc6, 0xce, 0x38, 0x97, 0xd1, 0x01, 0x34, 0xe6, 0x6c, 0x66, 0x1a, 0x42, 0x2e,
	0xf1, 0x2d, 0xf0, 0xb5, 0xa3, 0x29, 0x13, 0x27, 0xc6, 0x5c, 0xe6, 0x6d, 0x6e, 0xd5, 0xb1, 0xac,
	0xe2, 0xdb, 0x70, 0xa9, 0xe2, 0x86, 0xa9, 0xed, 0x00, 0x5a, 0xa9, 0xa0, 0x62, 0x99, 0x9a, 0x3b,
	0x46, 0xc2, 0x37, 0x20, 0x90, 0x97, 0x4e, 0x78, 0x3c, 0x8f, 0xa3, 0xd9, 0x33, 0x96, 0xa6, 0x61,
	0x1c, 0xe5, 0xb7, 0xca, 0x73, 0x7b, 0x0d, 0x7a, 0xdf, 0xd2, 0xf9, 0x9c, 0x89, 0x67, 0xea, 0xf6,
	0xb6, 0xf1, 0xbe, 0x07, 0x5e, 0xf1, 0x98, 0x79, 0xee, 0x2a, 0xb8, 0xd2, 0x2c, 0x33, 0xfd, 0xb5,
	0x47, 0x0a, 0xa7, 0xf4, 0x1e, 0x7e, 0x00, 0x5d, 0x5b, 0x2d, 0xd3, 0x36, 0x59, 0x72, 0xce, 0xa2,
	0xc9, 0x2a, 0x2b, 0x4d, 0x26, 0xab, 0xd1, 0x5c, 0x48, 0x40, 0x52, 0x85, 0xa9, 0x8f, 0x8d, 0x84,
	0x8f, 0xe0, 0xb2, 0x7e, 0xe3, 0xeb, 0x84, 0x71, 0x35, 0x74, 0xe9, 0xd3, 0x30, 0xdd, 0xda, 0x41,
	0x08, 0x9a, 0x09, 0x9d, 0xe9, 0xc9, 0x6f, 0x8c, 0xd5, 0x1a, 0x7f, 0x96, 0xc5, 0x50, 0x7c, 0x02,
	0x7d, 0x08, 0xcd, 0x29, 0x15, 0xd4, 0x84, 0x70, 0x40, 0x4a, 0x87, 0xc6, 0x6a, 0x17, 0xff, 0xe6,
	0xc0, 0x85, 0xd2, 0x4e, 0x95, 0xd5, 0xa9, 0x4c, 0x86, 0xb1, 0x2a, 0xd7, 0x52, 0x27, 0x24, 0x32,
	0xe8, 0x76, 0x52, 0x6b, 0xab, 0x74, 0x4d, 0xbb, 0x74, 0x56, 0xf0, 0xb2, 0x9b, 0xf2, 0xe0, 0x95,
	0x7e, 0xa2, 0xf0, 0xa7, 0x65, 0xf0, 0x4a, 0x49, 0x85, 0x44, 0xb6, 0x75, 0xff, 0x65, 0x32, 0xbe,
	0x0b, 0xbd, 0xb1, 0xea, 0x45, 0x3a, 0x7f, 0xd7, 0x44, 0xdd, 0x5b, 0x5f, 0x3d, 0xa1, 0x5c, 0x44,
	0x8c, 0x57, 0xe6, 0xa9, 0x74, 0xc6, 0xe4, 0xe9, 0x6f, 0x07, 0x2e, 0x94, 0x76, 0x2c, 0xbc, 0x75,
	0xca, 0xa8, 0xbf, 0x15, 0xa3, 0x3d, 0x70, 0xe7, 0xec, 0x8c, 0xe9, 0x39, 0x6c, 0x8c, 0xb5, 0x90,
	0x4d, 0x95, 0x4e, 0x9b, 0x5c, 0xa2, 0x0f, 0x00, 0xb8, 0x19, 0x7d, 0x36, 0xf5, 0x5d, 0x75, 0xd8,
	0xd2, 0xc8, 0xff, 0x8e, 0xb3, 0x33, 0x16, 0x2d, 0x25, 0x38, 0xcb, 0x8e, 0xca, 0xc4, 0xc2, 0xf4,
	0x6a, 0x84, 0x5e, 0x4f, 0xef, 0x00, 0x5a, 0x09, 0xe5, 0x12, 0x6f, 0x3b, 0xba, 0x42, 0x5a, 0xc2,
	0x3f, 0x3a, 0xd0, 0x7b, 0xc8, 0x19, 0x15, 0xec, 0x84, 0xae, 0xce, 0x41, 0xb0, 0x01, 0xb4, 0x16,
	0x4c, 0x9c, 0xc6, 0x19, 0xbe, 0x18, 0xc9, 0xaa, 0x70, 0xc3, 0x6e, 0xef, 0x42, 0x25, 0x9b, 0xa5,
	0x91, 0xf0, 0xa1, 0x4d, 0x27, 0x13, 0xd3, 0x16, 0x72, 0x2b, 0x13, 0x31, 0x01, 0xaf, 0xe8, 0xcc,
	0x5b, 0xa0, 0x81, 0x5b, 0xe7, 0xe5, 0xc7, 0xf1, 0x3f, 0x78, 0x8f, 0xff, 0x70, 0xa0, 0x5f, 0x32,
	0x5a, 0x0d, 0x45, 0xd5, 0xa8, 0x8f, 0xae, 0xc3, 0xc1, 0x82, 0xf1, 0xc9, 0x29, 0x8d, 0xc4, 0xcb,
	0x2c, 0x0d, 0x7a, 0x96, 0x2e, 0x64, 0xfa, 0x23, 0xad, 0xb6, 0xdc, 0x6b, 0x6e, 0x75, 0xcf, 0xdd,
	0xc4, 0x1b, 0x13, 0x6a, 0xcb, 0x0e, 0x15, 0xff, 0xee, 0x80, 0xf7, 0x3c, 0x99, 0x6e, 0xe6, 0xea,
	0x0a, 0x74, 0xe3, 0x0c, 0x00, 0x5e, 0xe6, 0xfe, 0xef, 0xe6, 0xba, 0x27, 0xdb, 0x02, 0xf9, 0x37,
	0xa5, 0x5f, 0x7b, 0xe7, 0x96, 0x0b, 0x61, 0x0a, 0xdc, 0x2a, 0x14, 0xf8, 0x26, 0xf4, 0x4b, 0x4e,
	0xbf, 0xa5, 0x23, 0x3e, 0x05, 0x74, 0xcc, 0xc4, 0x23, 0x96, 0xc4, 0x69, 0x28, 0xd2, 0x77, 0x01,
	0x89, 0x3f, 0x1d, 0xd8, 0x35, 0xf7, 0x9e, 0x08, 0xb6, 0xc8, 0xb1, 0xcf, 0xb1, 0xb0, 0xcf, 0x03,
	0xf7, 0x8c, 0xce, 0xc3, 0xa9, 0xb9, 0xa8, 0x85, 0x42, 0xc0, 0x8d, 0xad, 0xf0, 0x5f, 0x2c, 0xe1,
	0xda, 0x7f, 0xb7, 0x80, 0x98, 0x3e, 0xb4, 0x13, 0x1a, 0x4e, 0xe3, 0xa5, 0xc8, 0xa6, 0xdb, 0x88,
	0x7a, 0x67, 0xa5, 0x5c, 0x6a, 0x2b, 0xeb, 0x99, 0x88, 0x6f, 0x41, 0x37, 0x0b, 0x58, 0xe1, 0xda,
	0xb0, 0x80, 0x6b, 0x5d, 0x62, 0x45, 0x65, 0x30, 0xed, 0x45, 0x36, 0x37, 0x66, 0xeb, 0x3c, 0x76,
	0x5b, 0xf1, 0x79, 0x9d, 0x17, 0xf1, 0xe8, 0x67, 0x07, 0xda, 0x86, 0xbc, 0xa1, 0xeb, 0xd0, 0x38,
	0x66, 0x02, 0x21, 0xb2, 0xc1, 0xb7, 0x83, 0x2e, 0xb1, 0xc8, 0x2e, 0xae, 0xa1, 0x8f, 0xc0, 0x55,
	0x44, 0x1b, 0x79, 0xa4, 0x82, 0x77, 0x6f, 0x1c, 0xbf, 0x0b, 0x2d, 0x4d, 0x0d, 0x51, 0x9f, 0x54,
	0xf1, 0xcc, 0x60, 0x40, 0x2a, 0x19, 0x24, 0xae, 0x8d, 0x7e, 0xad, 0x43, 0x53, 0x12, 0x0a, 0x74,
	0x03, 0x5c, 0xc5, 0x14, 0xd1, 0x45, 0x52, 0x66, 0x8d, 0xc1, 0x3e, 0x29, 0x90, 0x3f, 0x5c, 0x43,
	0xb7, 0xa1, 0xa5, 0x99, 0x1a, 0x42, 0x64, 0x83, 0xf1, 0x05, 0x3d, 0x52, 0x41, 0xe5, 0x6a, 0x68,
	0x04, 0x9d, 0x8c, 0xc7, 0x21, 0x8f, 0x54, 0xd0, 0xba, 0x0a, 0x43, 0x5f, 0xc0, 0x7e, 0x91, 0xeb,
	0xa0, 0xd2, 0x99, 0xe0, 0x32, 0xd9, 0x4e, 0x88, 0x70, 0x0d, 0x7d, 0x09, 0x7b, 0x05, 0x86, 0x85,
	0x2e, 0x91, 0x6d, 0x3c, 0x2d, 0x08, 0xc8, 0x56, 0x42, 0x86, 0x6b, 0xa3, 0x1f, 0x1c, 0x68, 0x69,
	0x8e, 0x80, 0x3e, 0x81, 0x96, 0x61, 0x3b, 0x1e, 0xa9, 0x20, 0x58, 0x41, 0x9f, 0x54, 0xf1, 0x29,
	0x5c, 0x43, 0xc7, 0xb0, 0x5f, 0xe2, 0x27, 0xef, 0x91, 0x73, 0x98, 0x4f, 0xfe, 0x50, 0x71, 0x17,
	0xd7, 0x46, 0xf7, 0x65, 0x2e, 0xf5, 0x3f, 0x8c, 0x3e, 0x86, 0xa6, 0x7a, 0xca, 0x23, 0x15, 0x9c,
	0x20, 0xf0, 0x48, 0xc5, 0x77, 0x8f, 0x6b, 0xa3, 0x9f, 0xea, 0x00, 0xeb, 0x67, 0xd1, 0x7d, 0xd8,
	0x2b, 0x00, 0x39, 0xea, 0x93, 0xaa, 0xdf, 0x24, 0x18, 0x90, 0x4a, 0xbc, 0x57, 0xa5, 0xea, 0x1e,
	0x4d, 0x44, 0x78, 0x46, 0x05, 0x7b, 0x9e, 0x32, 0xfe, 0xee, 0x0f, 0x3c, 0x86, 0x5e, 0x01, 0xdf,
	0x4c, 0x8a, 0xfb, 0xa4, 0x0a, 0xaa, 0x83, 0x01, 0xa9, 0x04, 0x43, 0x5c, 0x43, 0x9f, 0x43, 0xd7,
	0xfe, 0x38, 0x91, 0x47, 0x2a, 0x3e, 0xf5, 0xa0, 0x4f, 0xaa, 0x7e, 0x57, 0x5c, 0x1b, 0xbd, 0x81,
	0x4e, 0x86, 0x20, 0xe8, 0x36, 0xec, 0x5a, 0x08, 0x8a, 0x7a, 0x64, 0x13, 0x4f, 0x83, 0x3d, 0x62,
	0x03, 0x0e, 0xae, 0xa1, 0x3b, 0x59, 0x2a, 0x8d, 0x3e, 0xcf, 0x44, 0x11, 0x60, 0x82, 0x02, 0x18,
	0xe1, 0xda, 0x03, 0xf7, 0x45, 0x83, 0x26, 0xe1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x88,
	0xe4, 0x1f, 0x02, 0x10, 0x00, 0x00,
}
